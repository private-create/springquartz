<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<import resource="classpath:SpringApplicationContext.xml"/>
	 <!-- 配置任务并发执行线程池 -->
    <bean id="executor"
        class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <!-- 核心线程数 线程池维护线程的最少数量 -->
        <property name="corePoolSize" value="100" />  
        <!-- 线程池维护线程所允许的空闲时间 -->
        <property name="keepAliveSeconds" value="200" />  
        <!-- 线程池维护线程的最大数量 -->
        <property name="maxPoolSize" value="100" />  
        <!-- 线程池所使用的缓冲队列 -->
        <property name="queueCapacity" value="2000" /> 
        <!-- 线程池对拒绝任务(无线程可用)的处理策略 ThreadPoolExecutor.CallerRunsPolicy策略 ,调用者的线程会执行该任务,如果执行器已关闭,则丢弃.  -->
        <property name="rejectedExecutionHandler">
            <bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" />
        </property> 
    </bean>
    
	<!-- 配置要执行的定时方法的bean job -->
	<bean id="springQUartz" class="com.baidu.main.QuartzBegin"></bean>
	
	<!--配置任务调度方案策略 jobDetail-->
	<bean id="springQUartzJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		
		<!-- 配置自定义要执行的方法所在的类 -->
		<property name="targetObject" ref="springQUartz"></property>
		
		<!-- 配置自定义类要定时执行的方法 -->
		<property name="targetMethod" value="hello"></property>
	</bean>
	
	<!-- 配置调度参数 -->
	<bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		
		<!-- 配置调度策略 -->
		<property name="jobDetail" ref="springQUartzJob"></property>
		
		<!-- 配置调度时间 -->
		<property name="cronExpression" value="0/59 * * * * ?"></property>
		
	</bean>
	
	<!-- 调度容器的注册 -->
	<bean id="springJobScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean" lazy-init="true">
		
		<property name="triggers" ref="cronTrigger"></property>
		
		<property name="startupDelay" value="5"></property>
		
		<property name="taskExecutor" ref="executor"></property>
	 </bean>

</beans>
